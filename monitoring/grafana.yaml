apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: monitoring
  source:
    chart: grafana
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.33.2
    helm:
      values: |-
        globalArguments:
        interval: 5m
        chart:
          spec:
            chart: grafana
            interval: 1m
            sourceRef:
              kind: HelmRepository
              name: grafana
              namespace: monitoring
        values:
          ingress: { enabled: true }
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  url: http://prometheus-server
                  access: proxy
                  isDefault: true
                - name: Loki
                  type: loki
                  url: http://loki:3100
                  access: proxy
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: "default"
                  orgId: 1
                  folder: ""
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                    path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              kubernetes:
                gnetId: 10000
                revision: 1
                datasource: Prometheus
  destination: { namespace: monitoring }
  syncPolicy:
    syncOptions: [CreateNamespace=true]
    automated: { prune: true, selfHeal: true }

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  namespace: monitoring
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`grafana.local.mp281x.xyz`)
      kind: Rule
      services: [{ name: grafana, port: 80 }]
