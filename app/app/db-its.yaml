apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-its
  namespace: default
  labels: { app: db-its }
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/match-tag: "true"
    # argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  replicas: 1
  selector: { matchLabels: { app: db-its } }
  template:
    metadata: { labels: { app: db-its } }
    spec:
      containers:
        - name: db-its
          image: postgres:latest
          ports: [containerPort: 5432]
          env:
            - { name: POSTGRES_USER, value: db-its }
            - { name: POSTGRES_DB, value: db-its }
            - { name: POSTGRES_PASSWORD, value: db-its }
          volumeMounts: [{ name: data, mountPath: /var/lib/postgresql }]
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: db-its }

---
apiVersion: v1
kind: Service
metadata:
  name: db-its
  namespace: default
spec:
  selector: { app: db-its }
  ports: [{ port: 5432, name: db-its, targetPort: 5432 }]
  clusterIP: 10.43.0.131
