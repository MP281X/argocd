apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-its
  namespace: default
  labels: { app: db-its }
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector: { matchLabels: { app: db-its } }
  template:
    metadata: { labels: { app: db-its } }
    spec:
      containers:
        - name: db-its
          image: postgres:latest
          ports: [containerPort: 5432]
          env:
            - { name: POSTGRES_USER, value: db-its }
            - { name: POSTGRES_DB, value: db-its }
            - { name: POSTGRES_PASSWORD, value: db-its }
          volumeMounts: [{ name: data, mountPath: /var/lib/postgresql }]
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: db-its }

---
apiVersion: v1
kind: Service
metadata:
  name: db-its
  namespace: default
spec:
  selector: { app: db-its }
  ports: [{ port: 5432, name: db-its, targetPort: 5432 }]
  clusterIP: 10.43.0.131

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchdb
  namespace: default
  labels: { app: couchdb }
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector: { matchLabels: { app: couchdb } }
  template:
    metadata: { labels: { app: couchdb } }
    spec:
      containers:
        - name: couchdb
          image: apache/couchdb:latest
          ports: [containerPort: 5984]
          env:
            - { name: COUCHDB_USER, value: admin }
            - { name: COUCHDB_PASSWORD, value: password }

---
apiVersion: v1
kind: Service
metadata:
  name: couchdb
  namespace: default
spec:
  selector: { app: couchdb }
  ports: [{ port: 5984, name: couchdb, targetPort: 5984 }]

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: couchdb
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`couchdb.mp281x.xyz`)
      kind: Rule
      services: [{ name: couchdb, port: 5984 }]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: default
  labels: { app: influxdb }
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector: { matchLabels: { app: influxdb } }
  template:
    metadata: { labels: { app: influxdb } }
    spec:
      containers:
        - name: influxdb
          image: influxdb:latest
          ports: [containerPort: 8086]

---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: default
spec:
  selector: { app: influxdb }
  ports: [{ port: 8086, name: influxdb, targetPort: 8086 }]

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: influxdb
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`influxdb.mp281x.xyz`)
      kind: Rule
      services: [{ name: influxdb, port: 8086 }]
