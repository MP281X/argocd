apiVersion: v1
kind: Namespace
metadata: { name: vaultwarden }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels: { app: vaultwarden }
spec:
  replicas: 1
  selector: { matchLabels: { app: vaultwarden } }
  template:
    metadata: { labels: { app: vaultwarden } }
    spec:
      containers:
        - name: vaultwarden
          image: vaultwarden/server:latest
          ports: [containerPort: 80]

---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
spec:
  selector: { app: vaultwarden }
  ports: [{ port: 80, name: vaultwarden, targetPort: 80 }]

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vaultwarden
  namespace: vaultwarden
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  tls: { secretName: vaultwarden-cert }
  routes:
    - match: Host(`vaultwarden.mp281x.xyz`)
      kind: Rule
      services: [{ name: vaultwarden, port: 80 }]
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vaultwarden-cert
  namespace: vaultwarden
spec:
  secretName: vaultwarden-cert
  dnsNames: [vaultwarden.mp281x.xyz]
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
