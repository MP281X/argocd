apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: default
  labels: { app: vaultwarden }
spec:
  replicas: 1
  selector: { matchLabels: { app: vaultwarden } }
  template:
    metadata: { labels: { app: vaultwarden } }
    spec:
      containers:
        - name: vaultwarden
          image: vaultwarden/server:latest
          ports: [containerPort: 80]
          env: [{ name: DOMAIN, value: "https://vaultwarden.mp281x.xyz" }]
          volumeMounts: [{ name: data, mountPath: /data }]
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: vaultwarden }

---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: default
spec:
  selector: { app: vaultwarden }
  ports: [{ port: 80, name: vaultwarden, targetPort: 80 }]

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vaultwarden
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`vaultwarden.mp281x.xyz`)
      kind: Rule
      services: [{ name: vaultwarden, port: 80 }]
