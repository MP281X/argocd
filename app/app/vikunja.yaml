apiVersion: apps/v1
kind: Deployment
metadata:
  name: vikunja-api
  namespace: default
  labels: { app: vikunja-api }
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/match-tag: "true"
spec:
  replicas: 1
  selector: { matchLabels: { app: vikunja-api } }
  template:
    metadata: { labels: { app: vikunja-api } }
    spec:
      containers:
        - name: vikunja-api
          image: vikunja/api:latest
          ports: [containerPort: 3456]
          env:
            - { name: VIKUNJA_DATABASE_TYPE, value: "sqlite" }
            - {
                name: VIKUNJA_SERVICE_FRONTENDURL,
                value: "https://vikunja.mp281x.xyz/",
              }
          volumeMounts: [{ name: data, mountPath: /app/vikunja/files }]
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: vikunja }

---
apiVersion: v1
kind: Service
metadata:
  name: vikunja-api
  namespace: default
spec:
  selector: { app: vikunja-api }
  ports: [{ port: 3456, name: vikunja-api, targetPort: 3456 }]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vikunja
  namespace: default
  labels: { app: vikunja }
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/match-tag: "true"
spec:
  replicas: 1
  selector: { matchLabels: { app: vikunja } }
  template:
    metadata: { labels: { app: vikunja } }
    spec:
      containers:
        - name: vikunja
          image: vikunja/frontend:latest
          ports: [containerPort: 80]
          env:
            - {
                name: VIKUNJA_API_URL,
                value: "https://vikunja.mp281x.xyz/api/v1",
              }

---
apiVersion: v1
kind: Service
metadata:
  name: vikunja
  namespace: default
spec:
  selector: { app: vikunja }
  ports: [{ port: 80, name: vikunja, targetPort: 80 }]
