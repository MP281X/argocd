apiVersion: apps/v1
kind: Deployment
metadata:
  name: duplicati
  namespace: app
  labels: { app: duplicati }
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 1h"
    keel.sh/match-tag: "true"
spec:
  replicas: 1
  selector: { matchLabels: { app: duplicati } }
  template:
    metadata: { labels: { app: duplicati } }
    spec:
      containers:
        - name: duplicati
          image: lscr.io/linuxserver/duplicati:latest
          ports: [containerPort: 8200]
          env:
            - { name: PUID, value: 1000 }
            - { name: PGID, value: 1000 }
            - { TZ: Europe/Rome }
          volumeMounts:
            - { name: config, mountPath: /config }
            - { name: vaultwarden, mountPath: /source/vaultwarden }
      volumes:
        - { name: config, persistentVolumeClaim: { claimName: duplicati } }
        - {
            name: vaultwarden,
            persistentVolumeClaim: { claimName: vaultwarden },
          }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: duplicati
  namespace: app
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: duplicati
  namespace: app
spec:
  selector: { app: duplicati }
  ports: [{ port: 8200, name: duplicati, targetPort: 8200 }]
