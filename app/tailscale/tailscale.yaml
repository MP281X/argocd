# apiVersion: v1
# kind: Pod
# metadata:
#   name: tailscale-proxy
#   namespace: traefik
#   annotations: { argocd.argoproj.io/sync-wave: "1" }
# spec:
#   serviceAccountName: tailscale
#   initContainers:
#     - name: sysctler
#       image: busybox
#       securityContext: { privileged: true }
#       command: ["/bin/sh"]
#       args:
#         - -c
#         - sysctl -w net.ipv4.ip_forward=1 net.ipv6.conf.all.forwarding=1
#       resources: { requests: { cpu: 1m, memory: 1Mi } }
#   containers:
#     - name: tailscale
#       imagePullPolicy: Always
#       image: ghcr.io/tailscale/tailscale:latest
#       env:
#         - { name: TS_USERSPACE, value: "false" }
#         - { name: TS_DEST_IP, value: 10.43.11.125 }
#         - { name: TS_KUBE_SECRET, value: tailscale-config }
#         - { name: TS_EXTRA_ARGS, value: --hostname=tailscale-ingress }
#         - name: TS_AUTH_KEY
#           valueFrom:
#             secretKeyRef: { name: tailscale-config, key: TS_AUTH_KEY }
#       securityContext: { capabilities: { add: [NET_ADMIN] } }
# ---
apiVersion: v1
kind: Pod
metadata:
  name: subnet-router
  namespace: traefik
  annotations: { argocd.argoproj.io/sync-wave: "1" }
  labels:
    app: tailscale
spec:
  serviceAccountName: tailscale
  containers:
    - name: tailscale
      imagePullPolicy: Always
      image: "ghcr.io/tailscale/tailscale:latest"
      env:
        # Store the state in a k8s secret
        - name: TS_KUBE_SECRET
          value: tailscale-config
        - name: TS_USERSPACE
          value: "true"
        - name: TS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: tailscale-config
              key: TS_AUTH_KEY
              optional: true
        - name: TS_ROUTES
          value: 10.43.0.0/16,192.168.0.0/16
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
