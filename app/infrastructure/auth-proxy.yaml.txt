apiVersion: v1
kind: Namespace
metadata: { name: auth }

apiVersion: apps/v1
kind: Deployment
metadata:
  labels: { k8s-app: oauth2-proxy }
  name: oauth2-proxy
  namespace: auth
  annotations: { argocd.argoproj.io/sync-wave: "5" }
spec:
  replicas: 1
  selector: { matchLabels: { k8s-app: oauth2-proxy } }
  template:
    metadata: { labels: { k8s-app: oauth2-proxy } }
    spec:
      containers:
        - args:
            - --provider=github
            - --email-domain=*
            - --upstream=file:///dev/null
            - --http-address=0.0.0.0:4180
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: CLIENT_ID
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: CLIENT_SECRET
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: COOKIE_SECRET
          image: quay.io/oauth2-proxy/oauth2-proxy:latest
          imagePullPolicy: Always
          name: oauth2-proxy
          ports: [{ containerPort: 4180, protocol: TCP }]

---
apiVersion: v1
kind: Service
metadata:
  labels: { k8s-app: oauth2-proxy }
  name: oauth2-proxy
  namespace: auth
  annotations: { argocd.argoproj.io/sync-wave: "6" }
spec:
  selector: { k8s-app: oauth2-proxy }
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
