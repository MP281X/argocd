apiVersion: v1
kind: Namespace
metadata: { name: traefik }

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations: { argocd.argoproj.io/sync-wave: "1" }
spec:
  project: infrastructure
  source:
    chart: traefik
    repoURL: https://helm.traefik.io/traefik
    targetRevision: 20.1.1
    helm:
      values: |-
        globalArguments:
          - "--global.checknewversion=false"
          - "--global.sendanonymoususage=false"
        additionalArguments:
          - "--log.level=INFO"
          - "--serversTransport.insecureSkipVerify=true"

        deployment:
          enabled: true
          additionalContainers:
            - name: ts-sidecar
              imagePullPolicy: Always
              image: "ghcr.io/tailscale/tailscale:latest"
              env:
                - { name: TS_KUBE_SECRET, value: tailscale-config }
                - { name: TS_USERSPACE, value: "false" }
                - { name: TS_EXTRA_ARGS, value: --hostname=tailscale-sidecar }
                - name: TS_AUTH_KEY
                  valueFrom:
                    secretKeyRef: { name: tailscale-config, key: TS_AUTH_KEY }
              securityContext: { capabilities: { add: [NET_ADMIN] } }

        ports:
          web:
            port: 80
            expose: true
            protocol: TCP
            exposePort: 80
            redirectTo: websecure
          websecure:
            port: 443
            expose: true
            protocol: TCP
            exposePort: 443
            tls: { enable: true }
          postgresql:
            expose: true
            port: 5432
            exposedPort: 5432
            protocol: TCP

        rbac: { enabled: true }
        ingressRoute: { dashboard: { enabled: false } }
        service:
          type: ClusterIP
          spec:
            externalTrafficPolicy: ''
            clusterIP: 10.43.0.100
        providers:
          kubernetesCRD:
            enabled: true
            ingressClass: traefik
            allowCrossNamespace: true
          kubernetesIngress:
            enabled: true
            publishedService: { enabled: true }

  destination:
    namespace: traefik
    server: https://kubernetes.default.svc
  syncPolicy:
    syncOptions: [CreateNamespace=true]
    automated: { prune: true, selfHeal: true }
