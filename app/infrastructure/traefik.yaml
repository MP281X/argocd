apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: infrastructure
  source:
    chart: traefik
    repoURL: https://helm.traefik.io/traefik
    targetRevision: 20.8.0
    helm:
      values: |-
        globalArguments:
          - "--global.checknewversion=false"
          - "--global.sendanonymoususage=false"
        additionalArguments:
          - "--log.level=INFO"
          - "--serversTransport.insecureSkipVerify=true"

        ports:
          web:
            specificIPv4: {address: "10.43.0.100:80"}
            # port: 80
            expose: true
            protocol: TCP
            redirectTo: websecure
          websecure:
            specificIPv4: {address: "10.43.0.100:80"}
            # port: 443
            expose: true
            protocol: TCP
            tls: { enable: true }

        rbac: { enabled: true }
        ingressRoute: { dashboard: { enabled: false } }
        service:
          type: ClusterIP
          externalIPs: [10.43.0.100]
          spec:
            externalTrafficPolicy: ''
            clusterIP: 10.43.0.100
          internal:
            type: ClusterIP
            externalIPs: [10.43.0.110]
            spec:
              externalTrafficPolicy: ''
              clusterIP: 10.43.0.110
              
        providers:
          kubernetesCRD:
            enabled: true
            ingressClass: traefik
            allowCrossNamespace: true
          kubernetesIngress:
            enabled: true
            publishedService: { enabled: true }

  destination:
    namespace: traefik
    server: https://kubernetes.default.svc
  syncPolicy:
    syncOptions: [CreateNamespace=true]
    automated: { prune: true, selfHeal: true }

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`traefik.mp281x.xyz`)
      kind: Rule
      services: [{ name: api@internal, kind: TraefikService }]
