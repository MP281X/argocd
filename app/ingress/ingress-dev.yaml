#? Argocd
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: argocd
  namespace: argocd
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`argocd.mp281x.xyz`)
      kind: Rule
      services: [{ name: argocd-server, port: 443 }]

---
#? Traefik
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`traefik.mp281x.xyz`)
      kind: Rule
      services: [{ name: api@internal, kind: TraefikService }]

---
#? Keel
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: keel
  namespace: kube-system
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`keel.mp281x.xyz`)
      kind: Rule
      services: [{ name: keel, port: 9300 }]

---
#? Longhorn
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: longhorn
  namespace: longhorn-system
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`longhorn.mp281x.xyz`)
      kind: Rule
      services: [{ name: longhorn-frontend, port: 80 }]

---
#? Grafana
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  namespace: monitoring
  annotations: { kubernetes.io/ingress.class: traefik }
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`grafana.mp281x.xyz`)
      kind: Rule
      services: [{ name: grafana, port: 80 }]
